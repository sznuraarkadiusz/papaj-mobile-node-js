// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Car {
  id             Int           @id @default(autoincrement())
  brand          String
  model          String
  color          String
  productionYear Int
  price          Float
  isAvailable    Boolean       @default(true)
  reservations   Reservation[]
  rents          Rent[]
  rate           Int           @default(0)
  numberOfRates  Int           @default(0)
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
  deletedAt      DateTime      @default(now())
}

model Rent {
  id         Int      @id @default(autoincrement())
  rentedBy   User     @relation(fields: [customerId], references: [id])
  customerId Int
  car        Car      @relation(fields: [carId], references: [id])
  carId      Int
  price      Float
  rentDate   String
  returnDate String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  deletedAt  DateTime @default(now())
}

model User {
  id           Int           @id @default(autoincrement())
  name         String
  surname      String
  address      String?
  email        String        @unique
  password     String
  phone        String
  isAdmin      Boolean       @default(false)
  reservations Reservation[]
  rents        Rent[]
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  deletedAt    DateTime      @default(now())
}

model Reservation {
  reservationId         Int      @id @default(autoincrement())
  reservedBy            User     @relation(fields: [userId], references: [id])
  userId                Int
  car                   Car      @relation(fields: [carId], references: [id])
  carId                 Int
  reservationDate       String
  reservationReturnDate String
  createdAt             DateTime @default(now())
  updatedAt             DateTime @updatedAt
  deletedAt             DateTime @default(now())
}
